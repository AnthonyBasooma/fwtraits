xxfinal1 <- v_sample(xxfinal, dist = 10000)
phytobn <- fw_fetchdata(data = xxfinal1,
ecoparams = c('life form', "substrate preference"),
taxonomic_column = 'species',
organismgroup = 'pb')
pbdata <- phytobn$ecodata %>% select(Taxonname, CategoryName) %>%
distinct(.keep_all = TRUE)
pb_traits <- pbdata %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
pb_comm <- xxfinal1 %>% st_drop_geometry() %>% select(species, sites)  %>%
filter(!is.na(sites)) %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = species, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('sites')
pbtraitdf <- pb_traits%>% tibble::column_to_rownames('Taxonname')
pbintcols <- match(rownames(pbtraitdf), colnames(pb_comm))
pbDF <- pb_comm[, pbintcols]
pb_result <- dbFD(x = pbtraitdf, a = pbDF,
calc.CWM = TRUE,
calc.FRic = TRUE,
calc.FDiv = TRUE,
stand.FRic = TRUE)
pbfdout <- data.frame(pb_result$nbsp, pb_result$FRic)
pbfdout$sites <- row.names(pbfdout)
names(pbfdout)[1:2] <- c('richness', "fric")
rownames(pbfdout) <- NULL
pbfdout <- pbfdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric))
pbfdout <- data.frame(pb_result$nbsp, pb_result$FRic)
pbfdout$sites <- row.names(pbfdout)
names(pbfdout)[1:2] <- c('richness', "fric")
View(pbfdout)
pbdout <- specleanr::getdata(data = pbd, colsp = 'Taxon', db=c('gbif', 'inat'),
gbiflim = 100, extent = danube)
#phytobenthos
danube <- st_read(system.file("extdata", "danube.shp.zip", package = 'specleanr'), quiet = TRUE)
pbd <- pbenthodata %>% filter(Taxon%in%c("Gongrosira debaryana",
"Gongrosira fluminensis",
"Hydrodictyon reticulatum",
"Sphaerobotrys fluviatilis",
"Stigeoclonium farctum",
"Stigeoclonium tenue",
"Tetraspora gelatinosa",
"Thorea hispida"))#23:25
pbdout <- specleanr::getdata(data = pbd, colsp = 'Taxon', db=c('gbif', 'inat'),
gbiflim = 100, extent = danube)
xxfinal1 <- v_sample(pbdout, dist = 10000)
pbdout1 <- pbdout %>% st_as_sf(coords = c('decimalLongitude','decimalLatitude'),
crs = st_crs(4326))
xxfinal1 <- v_sample(pbdout1, dist = 10000)
phytobn <- fw_fetchdata(data = xxfinal1,
ecoparams = c('life form', "substrate preference"),
taxonomic_column = 'species',
organismgroup = 'pb')
pbdata <- phytobn$ecodata %>% select(Taxonname, CategoryName) %>%
distinct(.keep_all = TRUE)
pb_traits <- pbdata %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
pb_comm <- xxfinal1 %>% st_drop_geometry() %>% select(species, sites)  %>%
filter(!is.na(sites)) %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = species, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('sites')
pbtraitdf <- pb_traits%>% tibble::column_to_rownames('Taxonname')
pbintcols <- match(rownames(pbtraitdf), colnames(pb_comm))
pbDF <- pb_comm[, pbintcols]
pb_result <- dbFD(x = pbtraitdf, a = pbDF,
calc.CWM = TRUE,
calc.FRic = TRUE,
calc.FDiv = TRUE,
stand.FRic = TRUE)
pbfdout <- data.frame(pb_result$nbsp, pb_result$FRic)
pbfdout$sites <- row.names(pbfdout)
names(pbfdout)[1:2] <- c('richness', "fric")
rownames(pbfdout) <- NULL
pbfdout <- pbfdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric))
View(pbtraitdf)
pbfdout <- data.frame(pb_result$nbsp, pb_result$FRic)
View(pbfdout)
specleanr::check_names('Brycius nurse')
specleanr::check_names('Brycius nurse', verbose = T)
specleanr::check_names('Brycius nurse', verbose = T)
specleanr::check_names('Brycius nurse', verbose = T, sn = TRUE)
specleanr::check_names('Brycius nurse', verbose = T, sn = F)
specleanr::check_names('Brachyalestes nurse', verbose = T, sn = F)
library(dplyr)
library(tidyr)
library(FD)
dfff <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dout <- dfff$ecodata %>% select(Taxonname, CategoryName)
traits_dummy <- dout %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
comm <- speciesdata %>% select(scientificName, waterBody)  %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
traitdf <- traits_dummy%>% tibble::column_to_rownames('Taxonname')
intcols <- match(rownames(traitdf), colnames(comm))
DF <- comm[, intcols]
fd_result <- dbFD(x = traitdf, a = DF,
calc.CWM = TRUE,
calc.FRic = TRUE,
calc.FDiv = TRUE,
stand.FRic = TRUE)
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric))
View(fdout)
View(fdout)
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'sites')
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'sites', cols = c('richness', fric))
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric"))
ggplot(fdout, aes(sites, pars))+
geom_bar()+
facet_wrap(~variable)
View(fdout)
ggplot(fdout, aes(sites, pars))+
geom_bar()
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable)
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))+
labs('Sites')
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))+
labs('Sites')
source("~/.active-rstudio-document", echo=TRUE)
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric'~'Functional Richness', 'Species Richness'))
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness', 'Species Richness'))
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = case_when(variable=='fric'~'Functional Richness', TRUE~ 'Species Richness'))
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric"))
View(fdout)
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric"))
View(fdout)
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = case_when(variable=='fric'~'Functional Richness', TRUE~ 'Species Richness'))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = case_when(variable=='fric'~'Functional Richness', TRUE~ 'Species Richness'))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.01)))+
labs('Sites')
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.1)))+
labs('Sites')
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
fd_result <- dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE)
fd_result <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
fd_result <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
ggplot(fdout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
fw_fdcompute <- function(){
dfff <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dout <- dfff$ecodata %>% select(Taxonname, CategoryName)
traits_dummy <- dout %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
comm <- speciesdata %>% select(scientificName, waterBody)  %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
traitdf <- traits_dummy%>% tibble::column_to_rownames('Taxonname')
intcols <- match(rownames(traitdf), colnames(comm))
DF <- comm[, intcols]
fd_result <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
}
fw_fdcompute <- function(){
dfff <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dout <- dfff$ecodata %>% select(Taxonname, CategoryName)
traits_dummy <- dout %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
comm <- speciesdata %>% select(scientificName, waterBody)  %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
traitdf <- traits_dummy%>% tibble::column_to_rownames('Taxonname')
intcols <- match(rownames(traitdf), colnames(comm))
DF <- comm[, intcols]
fd_result <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
}
sptraits <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
fw_fdcompute <- function(fwdata){
dout <- fwdata$ecodata %>% select(Taxonname, CategoryName)
traits_dummy <- dout %>%
mutate(value = 1) %>%
pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
comm <- speciesdata %>% select(scientificName, waterBody)  %>%
mutate(value = 1) %>%
distinct(.keep_all = TRUE) %>%
pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
traitdf <- traits_dummy%>% tibble::column_to_rownames('Taxonname')
intcols <- match(rownames(traitdf), colnames(comm))
DF <- comm[, intcols]
fd_result <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(fd_result$nbsp, fd_result$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
filter(!is.na(fric)) %>%
pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
}
dfout <- fw_fdcompute(sptraits)
ggplot(dfout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
usethis::use_package("FD", type = 'Suggests')
fw_fdcompute <- function(fwdata){
dout <- fwdata$ecodata %>% select(Taxonname, CategoryName)
#create dummy
binarydf <- dout %>% dplyr::mutate(value = 1) %>%
tidyr::pivot_wider(names_from = CategoryName, values_from = value, values_fill = 0)
comm <- speciesdata %>% dplyr::select(scientificName, waterBody)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE) %>%
tidyr::pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
traitdf <- binarydf %>% tibble::column_to_rownames('Taxonname')
intcols <- match(rownames(traitdf), colnames(comm))
DF <- comm[, intcols]
frdata <- suppressWarnings(dbFD(x = traitdf, a = DF,calc.CWM = TRUE, calc.FRic = TRUE, messages = FALSE))
fdout <- data.frame(frdata$nbsp, frdata$FRic)
fdout$sites <- row.names(fdout)
names(fdout)[1:2] <- c('richness', "fric")
rownames(fdout) <- NULL
fdout <- fdout[,c('sites', 'richness', "fric")] %>%
dplyr::filter(!is.na(fric)) %>%
tidyr::pivot_longer(names_to = 'variable', values_to = 'pars', cols = c('richness', "fric")) %>%
dplyr::mutate(variable = ifelse(variable=='fric','Functional Richness','Species Richness'))
}
usethis::use_package("tidyr", type = 'Suggests')
usethis::use_package("dplyr", type = 'Suggests')
usethis::use_package("sf", type = 'Suggests')
devtools::load_all(".")
vignette("data_for_taxa_groups")
sptraits <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dfout <- fw_fdcompute(sptraits)
devtools::load_all(".")
dfout <- fw_fdcompute(sptraits)
devtools::load_all(".")
dfout <- fw_fdcompute(sptraits)
dfout <- fw_fdcompute(sptraits)
ggplot(dfout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
library(ggplot2)
comm <- speciesdata %>% dplyr::select(species, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE) %>%
tidyr::pivot_wider(names_from = species, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames('waterBody')
devtools::load_all(".")
devtools::load_all(".")
library(ggplot2)
ggplot(dfout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
dfout <- fw_fdcompute(sptraits, species = 'scientificName', sites = "waterBody")
dfout <- fw_fdcompute(sptraits, sitesdata = speciesdata, species = 'scientificName', sites = "waterBody")
library(ggplot2)
ggplot(dfout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
devtools::load_all(".")
sptraits <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dfout <- fw_fdcompute(sptraits, sitesdata = speciesdata, species = 'scientificName', sites = "waterBody")
library(ggplot2)
ggplot(dfout, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
sp2 <- speciesdata %>%
sf::st_as_sf(coords = c('decimalLongitude', 'decimalLatude'), crs = st_crs(4326))
sp2 <- speciesdata %>%
sf::st_as_sf(coords = c('decimalLongitude', 'decimalLatude'), crs = sf::st_crs(4326))
sp2 <- speciesdata %>%
sf::st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = sf::st_crs(4326))
devtools::load_all(".")
sitedf <- fd_sample(sp2, 100)
sitedf <- fd_sample(sp2, 100)
sitedf <- fw_geosites(sp2, 100)
devtools::load_all(".")
devtools::check()
sitedf <- fw_geosites(sp2, 100)
View(sitedf)
sitedf <- fw_geosites(sp2, 1000)
dfout2 <- fw_fdcompute(sptraits, sitesdata = sitedf,
species = 'scientificName',
sites = "sites")
devtools::load_all(".")
dfout2 <- fw_fdcompute(sptraits, sitesdata = sitedf,
species = 'scientificName',
sites = "sites")
dout1 <- sptraits$ecodata %>% dplyr::select(Taxonname, CategoryName)
binarydf <- dout1 %>% dplyr::mutate(value = 1) %>%
tidyr::pivot_wider(names_from = CategoryName,
values_from = value, values_fill = 0)
View(binarydf)
comm1 <- sitedf %>% dplyr::select(scientificName, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE)
View(comm1)
ss <- if(inherits(sitedf, 'sf')) sitedf %>% st_drop_geometry()
ss <- if(inherits(sitedf, 'sf')) sitedf %>% sf::st_drop_geometry()
comm1 <- sitedf %>% dplyr::select(scientificName, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE)
View(comm1)
comm1 <- ss %>% dplyr::select(scientificName, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE)
comm1 <- ss %>% dplyr::select(scientificName, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE) %>%
tidyr::pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames(sites)
comm1 <- ss %>% dplyr::select(scientificName, sites)  %>%
dplyr:: mutate(value = 1) %>%
dplyr::distinct(.keep_all = TRUE) %>%
tidyr::pivot_wider(names_from = scientificName, values_from = value, values_fill = 0)%>%
tibble::column_to_rownames("sites")
View(comm1)
devtools::load_all(".")
sitedf <- fw_geosites(sp2, 1000)
sp2 <- speciesdata %>%
sf::st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = sf::st_crs(4326))
sitedf <- fw_geosites(sp2, 1000)
dfout2 <- fw_fdcompute(sptraits, sitesdata = sitedf,
species = 'scientificName',
sites = "sites")
sptraits <- fw_fetchdata(data = speciesdata,
ecoparams = c('rheophily habitat', 'spawning habitat'),
taxonomic_column = 'scientificName',
organismgroup = 'fi')
dfout2 <- fw_fdcompute(sptraits, sitesdata = sitedf,
species = 'scientificName',
sites = "sites")
View(dfout2)
ggplot(dfout2, aes(sites, pars))+
geom_bar(stat = 'identity')+
facet_wrap(~variable, scales = 'free_y')+
theme_bw()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))+
scale_y_continuous(expand = expansion(mult = c(0, 0.031)))+
labs('Sites')
devtools::load_all(".")
usethis::use_vignette("functionalindices", 'Compute fucntional indices using traits from the freshwaterecology.info')
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::check()
devtools::load_all(".")
devtools::load_all(".")
