[{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://anthonybasooma.github.io/fwtraits/articles/Secure_API_key.html","id":"steps-in-securing-the-api-key-","dir":"Articles","previous_headings":"","what":"Steps in securing the API key.","title":"How to handle the API key in public and private codes.","text":"STEP 1: Acquire API key, user can follow steps elucidated fw_be4ustart() function. STEP 2: Edit .Renviron file running fw_setapikey(). STEP 3: .Renviron window opens, please type API_KEY = “9f7be425-e099-11ee–…………..” STEP 4: Save restart R session. STEP 5: key ready use required provided anywhere within codes thereafter. STEPT 6: test codes, welcome message printed data retrieved.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/articles/Secure_API_key.html","id":"test-if-the-api-key-is-well-saved","dir":"Articles","previous_headings":"Steps in securing the API key.","what":"Test if the API key is well saved","title":"How to handle the API key in public and private codes.","text":"","code":"migration <- fw_fetchdata(data = 'Abramis brmaam',                           organismgroup = 'fi',                          ecoparams = 'migration',                          cachefolder = 'cache')#the species spelling is checked #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007  #or use the fw_keyload() function: which retruns a congratulation message"},{"path":"https://anthonybasooma.github.io/fwtraits/articles/Secure_API_key.html","id":"references","dir":"Articles","previous_headings":"","what":"3. References","title":"How to handle the API key in public and private codes.","text":"Wickham H (2024). httr2: Perform HTTP Requests Process Responses. R package version 1.0.3,https://CRAN.R-project.org/package=httr2 https://httr2.r-lib.org/articles/wrapping-apis.html","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"step-1-securing-and-loading-the-api-key-","dir":"Articles","previous_headings":"","what":"Step 1: Securing and loading the API key.","title":"Retrieve data for taxomomic groups.","text":"Please follow secure_the_api_key) steps secure API R environment retrieving species traits form database. check available traits database, can check fw_dbguide() browse database directly species traits.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"step2-fetching-groups-data-and-visualisation","dir":"Articles","previous_headings":"","what":"Step2: Fetching groups data and visualisation","title":"Retrieve data for taxomomic groups.","text":"ensure exact trait spellings used, user strongly advised run fw_dbguide() function filter organism groups. trait names can copied pasted ecoparams parameter fw_fetchdata() function. Multiple species can set list dataframe. Wide data formats can displayed, longer version output default. Ensure right species names indicated avoid detailed checks delays data search might lead erroneous trait extraction errors. Checks conducted species names ensure harmonized trait searches. Data output columns meaning","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"fishes","dir":"Articles","previous_headings":"Step2: Fetching groups data and visualisation","what":"1. Fishes","title":"Retrieve data for taxomomic groups.","text":"1.1: Single species 1.3 Visualizing fish traits","code":"migration <- fw_fetchdata(data = \"Abramis brama\",                           organismgroup = 'fi',                           ecoparams = 'migration') #>  ========================================================================  #>  Congratulations!!! Ready to interact with www.freshwaterecology.info database  #>  =========================================================================  #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007  head(migration$ecodata) #>   ID_FWE OrganismGroup     TaxaGroup     Family   Genus Species #> 1    210            fi Cypriniformes Cyprinidae Abramis   brama #>                        Taxonname           Author Parameter  CategoryName #> 1 Abramis brama (Linnaeus, 1758) (Linnaeus, 1758) migration potamodromous #>   CategoryLevels DataType ClassificationType #> 1             NA     <NA>               <NA> #>                                                CategoryExplanation #> 1 migratory fish species; whole life cycle is spent in freshwaters #species data archived in fwtraits  data(\"speciesdata\")   traitsout <- fw_fetchdata(data = speciesdata,                            organismgroup = 'fi',                           taxonomic_column = 'scientificName',                            ecoparams = c('migration', 'threat austria',                                         'oxygen tolerence', 'migration fibs'),                           taxalevel = 'species') #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007  head(traitsout$ecodata) #>   ID_FWE OrganismGroup       TaxaGroup        Family     Genus   Species #> 1    210            fi   Cypriniformes    Cyprinidae   Abramis     brama #> 2    216            fi   Cypriniformes    Cyprinidae  Alburnus  alburnus #> 3    222            fi  Anguilliformes   Anguillidae  Anguilla  anguilla #> 4    226            fi   Cypriniformes Nemacheilidae Barbatula barbatula #> 5    227            fi   Cypriniformes    Cyprinidae    Barbus    barbus #> 6    239            fi Scorpaeniformes      Cottidae    Cottus     gobio #>                              Taxonname           Author Parameter  CategoryName #> 1       Abramis brama (Linnaeus, 1758) (Linnaeus, 1758) migration potamodromous #> 2   Alburnus alburnus (Linnaeus, 1758) (Linnaeus, 1758) migration potamodromous #> 3   Anguilla anguilla (Linnaeus, 1758) (Linnaeus, 1758) migration    diadromous #> 4 Barbatula barbatula (Linnaeus, 1758) (Linnaeus, 1758) migration potamodromous #> 5       Barbus barbus (Linnaeus, 1758) (Linnaeus, 1758) migration potamodromous #> 6          Cottus gobio Linnaeus, 1758   Linnaeus, 1758 migration  no migration #>   CategoryLevels DataType ClassificationType #> 1           <NA>     <NA>               <NA> #> 2           <NA>     <NA>               <NA> #> 3           <NA>     <NA>               <NA> #> 4           <NA>     <NA>               <NA> #> 5           <NA>     <NA>               <NA> #> 6           <NA>     <NA>               <NA> #>                                                                 CategoryExplanation #> 1                  migratory fish species; whole life cycle is spent in freshwaters #> 2                  migratory fish species; whole life cycle is spent in freshwaters #> 3 migratory fish species; parts of the life cycle are spent in fresh and salt water #> 4                  migratory fish species; whole life cycle is spent in freshwaters #> 5                  migratory fish species; whole life cycle is spent in freshwaters #> 6                                               species with no migration movements fw_visualize(output = traitsout)"},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"macroinvertebrates","dir":"Articles","previous_headings":"Step2: Fetching groups data and visualisation","what":"2. Macroinvertebrates","title":"Retrieve data for taxomomic groups.","text":"2.1: Single species 2.2: one species vector/list 2.3: one species dataframe 2.4: Data visualization macroinvertebrates species considered 1, visualization can determine frequency trait. optional function post data searches.","code":"mmdata_traits <- fw_fetchdata(data =  \"Margaritifera margaritifera\",                               organismgroup = 'mi',                               ecoparams = c('stream zonation preference'),                               inform = TRUE) #> Macroinvertebrates for parameter -stream zonation preference- data is downloading. Be patient.. #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007 speciesvec <- c(\"Margaritifera margaritifera\",                 \"Pseudunio auricularius\",                 \"Musculium lacustre\",                 \"Musculium transversum\",                 \"Parastenocaris germanica\")  multspp <- fw_fetchdata(data =  speciesvec,                         organismgroup = 'mi',                         ecoparams = c('stream zonation preference'),                         inform = TRUE) #> Macroinvertebrates data was already downloaded. #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007 head(multspp$ecodata) #>   ID_FWE OrganismGroup TaxaGroup           Family         Genus       Species #> 1   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #> 2   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #> 3   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #> 4   6653            mi  Bivalvia MARGARITIFERIDAE     Pseudunio  auricularius #> 5   6653            mi  Bivalvia MARGARITIFERIDAE     Pseudunio  auricularius #> 6   6653            mi  Bivalvia MARGARITIFERIDAE     Pseudunio  auricularius #>                                      Taxonname           Author #> 1 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #> 2 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #> 3 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #> 4      Pseudunio auricularius (SPENGLER, 1793) (SPENGLER, 1793) #> 5      Pseudunio auricularius (SPENGLER, 1793) (SPENGLER, 1793) #> 6      Pseudunio auricularius (SPENGLER, 1793) (SPENGLER, 1793) #>                    Parameter CategoryName CategoryLevels DataType #> 1 stream zonation preference  epirhithral              2    Fuzzy #> 2 stream zonation preference metarhithral              5    Fuzzy #> 3 stream zonation preference hyporhithral              3    Fuzzy #> 4 stream zonation preference         <NA>           <NA>    Fuzzy #> 5 stream zonation preference         <NA>           <NA>    Fuzzy #> 6 stream zonation preference         <NA>           <NA>    Fuzzy #>           ClassificationType CategoryExplanation #> 1 10 point assignment system  upper-trout region #> 2 10 point assignment system  lower-trout region #> 3 10 point assignment system     grayling region #> 4 10 point assignment system                <NA> #> 5 10 point assignment system                <NA> #> 6 10 point assignment system                <NA> macrodf <- data.frame(organismgroup = rep('mi', 13),                       species = c(\"Margaritifera margaritifera\",                                   \"Pseudunio auricularius\",                                   \"Musculium lacustre\",                                   \"Musculium transversum\",                                   \"Corbicula fluminea\",                                   \"Congeria leucophaeata\",                                   \"Dreissena polymorpha\",                                   \"Dreissena rostriformis bugensis\",                                   \"Parastenocaris germaica\",                                   \"Branchiobdella balcanica\",                                   \"Branchiobdella hexadonta\",                                   \"Branchiobdella parasita\",                                   \"Branchiobdella pentadonta\"))  multspp_df <- fw_fetchdata(data =  macrodf,                            organismgroup = 'mi',                            taxonomic_column = 'species',                            ecoparams = c(\"stream zonation preference\", \"feeding type\"),                            inform = TRUE) #> Macroinvertebrates for parameter -stream zonation preference- data is downloading. Be patient.. #> Macroinvertebrates for parameter -feeding type- data is downloading. Be patient.. #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007 head(multspp_df$ecodata) #>   ID_FWE OrganismGroup TaxaGroup           Family         Genus       Species #> 1   4999            mi  Bivalvia     DREISSENIDAE     Dreissena    polymorpha #> 2   4999            mi  Bivalvia     DREISSENIDAE     Dreissena    polymorpha #> 3   4999            mi  Bivalvia     DREISSENIDAE     Dreissena    polymorpha #> 4   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #> 5   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #> 6   5943            mi  Bivalvia MARGARITIFERIDAE Margaritifera margaritifera #>                                      Taxonname           Author #> 1          Dreissena polymorpha (PALLAS, 1771)   (PALLAS, 1771) #> 2          Dreissena polymorpha (PALLAS, 1771)   (PALLAS, 1771) #> 3          Dreissena polymorpha (PALLAS, 1771)   (PALLAS, 1771) #> 4 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #> 5 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #> 6 Margaritifera margaritifera (LINNAEUS, 1758) (LINNAEUS, 1758) #>                    Parameter CategoryName CategoryLevels DataType #> 1 stream zonation preference   epipotamal              2    Fuzzy #> 2 stream zonation preference  metapotamal              4    Fuzzy #> 3 stream zonation preference     littoral              4    Fuzzy #> 4 stream zonation preference  epirhithral              2    Fuzzy #> 5 stream zonation preference metarhithral              5    Fuzzy #> 6 stream zonation preference hyporhithral              3    Fuzzy #>           ClassificationType #> 1 10 point assignment system #> 2 10 point assignment system #> 3 10 point assignment system #> 4 10 point assignment system #> 5 10 point assignment system #> 6 10 point assignment system #>                                    CategoryExplanation #> 1                                        barbel region #> 2                                         bream region #> 3 lake and stream shorelines, lentic sites, ponds etc. #> 4                                   upper-trout region #> 5                                   lower-trout region #> 6                                      grayling region fw_visualize(output = multspp) fw_visualize(output = multspp_df)"},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"macrophytes","dir":"Articles","previous_headings":"Step2: Fetching groups data and visualisation","what":"3. Macrophytes","title":"Retrieve data for taxomomic groups.","text":"","code":"mpp <- fw_fetchdata(data = c(\"Amblystegium fluviatile\",                              \"Amblystegium humile\",                              \"Amblystegium riparium\",                              \"Amblystegium serpens\",                              \"Amblystegium tenax\",                              \"Amblystegium varium\"),                     organismgroup = 'mp',                     ecoparams = c('zone - systema')) #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007"},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"phytobenthos","dir":"Articles","previous_headings":"Step2: Fetching groups data and visualisation","what":"4. Phytobenthos","title":"Retrieve data for taxomomic groups.","text":"","code":"pbdata <- fw_fetchdata(data = c(\"Gongrosira debaryana\",                                 \"Gongrosira fluminensis\",                                 \"Hydrodictyon reticulatum\",                                 \"Sphaerobotrys fluviatilis\",                                 \"Stigeoclonium farctum\",                                 \"Stigeoclonium tenue\",                                 \"Tetraspora gelatinosa\",                                 \"Thorea hispida\"),                        organismgroup = 'pb',                        ecoparams = c('substrate preference')) #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007 head(pbdata$ecodata) #>   ID_FWE OrganismGroup     TaxaGroup          Family         Genus     Species #> 1   9503            pb Chlorophyceae Chaetophoraceae    Gongrosira   debaryana #> 2   9503            pb Chlorophyceae Chaetophoraceae    Gongrosira   debaryana #> 3   9504            pb Chlorophyceae Chaetophoraceae    Gongrosira fluminensis #> 4   9517            pb Chlorophyceae Hydrodictyaceae  Hydrodictyon reticulatum #> 5   9576            pb Chlorophyceae   Chlorophyceae Sphaerobotrys fluviatilis #> 6   9584            pb Chlorophyceae Chaetophoraceae Stigeoclonium     farctum #>                   Taxonname            Author            Parameter CategoryName #> 1      Gongrosira debaryana      Rabenhorst 0 substrate preference    epilithic #> 2      Gongrosira debaryana      Rabenhorst 0 substrate preference    epiphytic #> 3    Gongrosira fluminensis     F.E.Fritsch 0 substrate preference    epilithic #> 4  Hydrodictyon reticulatum (Linnaeus) Bory 0 substrate preference         <NA> #> 5 Sphaerobotrys fluviatilis         Butcher 0 substrate preference    epilithic #> 6     Stigeoclonium farctum        Berthold 0 substrate preference    epilithic #>   CategoryLevels DataType ClassificationType CategoryExplanation #> 1             NA       NA                 NA            on stone #> 2             NA       NA                 NA           on plants #> 3             NA       NA                 NA            on stone #> 4             NA       NA                 NA                <NA> #> 5             NA       NA                 NA            on stone #> 6             NA       NA                 NA            on stone mipbdata <- fw_fetchdata(data = list(mi=c(\"Congeria kusceri\",                                           \"Congeria leucophaeata\",                                           \"Dreissena polymorpha\",                                           \"Dreissena rostriformis bugensis\"),                                      pb= c(\"Gongrosira debaryana\",                                            \"Gongrosira fluminensis\",                                            \"Hydrodictyon reticulatum\",                                            \"Sphaerobotrys fluviatilis\",                                            \"Stigeoclonium farctum\",                                            \"Stigeoclonium tenue\",                                            \"Tetraspora gelatinosa\",                                            \"Thorea hispida\")),                          organismgroup = c('mi','pb'),                          ecoparams = list(mi = c('stream zonation preference'),                                           pb = c('substrate preference')), details = TRUE) #>  ======================================  #>          DATA OUTPUT SUMMARY  #>  ======================================  #>  Number of Organism Groups Considered : 2  #>  Number of Organism Groups Considered : mi,pb  #>  Succesful organism Groups            : 2  #>  Failed organism Groups               : 0  #>  Taxa level used                      : species  #>  Failed at taxa level                 : NA  #>  Number of parameters                 : 2  #>  Error rate for wrong names           : 20  #>  Caching folder                       : cache  #>  ======================================  #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007  head(mipbdata$ecodata) #>   ID_FWE OrganismGroup TaxaGroup       Family     Genus      Species #> 1   4999            mi  Bivalvia DREISSENIDAE Dreissena   polymorpha #> 2   4999            mi  Bivalvia DREISSENIDAE Dreissena   polymorpha #> 3   4999            mi  Bivalvia DREISSENIDAE Dreissena   polymorpha #> 4  11585            mi  Bivalvia DREISSENIDAE  Congeria leucophaeata #> 5  11585            mi  Bivalvia DREISSENIDAE  Congeria leucophaeata #> 6  21963            mi  Bivalvia DREISSENIDAE  Congeria      kusceri #>                              Taxonname         Author #> 1  Dreissena polymorpha (PALLAS, 1771) (PALLAS, 1771) #> 2  Dreissena polymorpha (PALLAS, 1771) (PALLAS, 1771) #> 3  Dreissena polymorpha (PALLAS, 1771) (PALLAS, 1771) #> 4 Congeria leucophaeata (CONRAD, 1831) (CONRAD, 1831) #> 5 Congeria leucophaeata (CONRAD, 1831) (CONRAD, 1831) #> 6          Congeria kusceri BOLE, 1962     BOLE, 1962 #>                    Parameter CategoryName CategoryLevels DataType #> 1 stream zonation preference   epipotamal              2    Fuzzy #> 2 stream zonation preference  metapotamal              4    Fuzzy #> 3 stream zonation preference     littoral              4    Fuzzy #> 4 stream zonation preference  metapotamal              4    Fuzzy #> 5 stream zonation preference  hypopotamal              6    Fuzzy #> 6 stream zonation preference         <NA>           <NA>    Fuzzy #>           ClassificationType #> 1 10 point assignment system #> 2 10 point assignment system #> 3 10 point assignment system #> 4 10 point assignment system #> 5 10 point assignment system #> 6 10 point assignment system #>                                    CategoryExplanation #> 1                                        barbel region #> 2                                         bream region #> 3 lake and stream shorelines, lentic sites, ponds etc. #> 4                                         bream region #> 5                                brackish water region #> 6                                                 <NA>"},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"phytoplankton","dir":"Articles","previous_headings":"Step2: Fetching groups data and visualisation","what":"5. Phytoplankton","title":"Retrieve data for taxomomic groups.","text":"","code":"ppdata <- fw_fetchdata(data = c(\"Anathece clathrata\",                                 \"Anathece minutissima\",                                 \"Anthophysa vegetans\",                                 \"Apocalathium aciculiferum\",                                 \"Adlafia minuscula var. muralis\"),                        organismgroup = 'pp',                        ecoparams = c('stenoecy factor', 'life form'),                        cachefolder = 'cache') #> ********Please cite this website as:***********  #>  Schmidt-Kloiber, A. & Hering D. (2015): www.freshwaterecology.info - an online tool that unifies, standardises and codifies more than 20,000 European freshwater organisms and their ecological preferences. Ecological Indicators. https://doi.org/10.1016/j.ecolind.2015.02.007  head(ppdata) #> $ecodata #>    ID_FWE OrganismGroup    TaxaGroup Family       Genus     Species #> 1   10842            pp Cyanophyceae        Aphanothece   clathrata #> 2   10844            pp Cyanophyceae        Aphanothece minutissima #> 3   11993            pp Cyanophyceae        Aphanothece   clathrata #> 4   10842            pp Cyanophyceae        Aphanothece   clathrata #> 5   10842            pp Cyanophyceae        Aphanothece   clathrata #> 6   10844            pp Cyanophyceae        Aphanothece minutissima #> 7   10844            pp Cyanophyceae        Aphanothece minutissima #> 8   11993            pp Cyanophyceae        Aphanothece   clathrata #> 9   11993            pp Cyanophyceae        Aphanothece   clathrata #> 10  11993            pp Cyanophyceae        Aphanothece   clathrata #> 11  11993            pp Cyanophyceae        Aphanothece   clathrata #> 12  11993            pp Cyanophyceae        Aphanothece   clathrata #> 13  11993            pp Cyanophyceae        Aphanothece   clathrata #> 14  11993            pp Cyanophyceae        Aphanothece   clathrata #> 15  11993            pp Cyanophyceae        Aphanothece   clathrata #> 16  11993            pp Cyanophyceae        Aphanothece   clathrata #>                            Taxonname #> 1              Aphanothece clathrata #> 2            Aphanothece minutissima #> 3  Aphanothece clathrata  var. rosea #> 4              Aphanothece clathrata #> 5              Aphanothece clathrata #> 6            Aphanothece minutissima #> 7            Aphanothece minutissima #> 8  Aphanothece clathrata  var. rosea #> 9  Aphanothece clathrata  var. rosea #> 10 Aphanothece clathrata  var. rosea #> 11 Aphanothece clathrata  var. rosea #> 12 Aphanothece clathrata  var. rosea #> 13 Aphanothece clathrata  var. rosea #> 14 Aphanothece clathrata  var. rosea #> 15 Aphanothece clathrata  var. rosea #> 16 Aphanothece clathrata  var. rosea #>                                              Author       Parameter #> 1                                     W. & G.S.West       life form #> 2  (W. West) Komárková-Legnerová & G. Cronberg 1994       life form #> 3                                           Skuja 0       life form #> 4                                     W. & G.S.West stenoecy factor #> 5                                     W. & G.S.West stenoecy factor #> 6  (W. West) Komárková-Legnerová & G. Cronberg 1994 stenoecy factor #> 7  (W. West) Komárková-Legnerová & G. Cronberg 1994 stenoecy factor #> 8                                           Skuja 0 stenoecy factor #> 9                                           Skuja 0 stenoecy factor #> 10                                          Skuja 0 stenoecy factor #> 11                                          Skuja 0 stenoecy factor #> 12                                          Skuja 0 stenoecy factor #> 13                                          Skuja 0 stenoecy factor #> 14                                          Skuja 0 stenoecy factor #> 15                                          Skuja 0 stenoecy factor #> 16                                          Skuja 0 stenoecy factor #>                     CategoryName CategoryLevels DataType ClassificationType #> 1                       planktic           <NA>       NA                 NA #> 2                       planktic           <NA>       NA                 NA #> 3                           <NA>           <NA>       NA                 NA #> 4  Lowland stratified HMWB & AWB              2       NA                 NA #> 5                   pa.lake – LL              1       NA                 NA #> 6            Danube Basin rivers              1       NA                 NA #> 7        Central Highland rivers              1       NA                 NA #> 8                           <NA>           <NA>       NA                 NA #> 9                           <NA>           <NA>       NA                 NA #> 10                          <NA>           <NA>       NA                 NA #> 11                          <NA>           <NA>       NA                 NA #> 12                          <NA>           <NA>       NA                 NA #> 13                          <NA>           <NA>       NA                 NA #> 14                          <NA>           <NA>       NA                 NA #> 15                          <NA>           <NA>       NA                 NA #> 16                          <NA>           <NA>       NA                 NA #>                                                                     CategoryExplanation #> 1                                                               planktic living species #> 2                                                               planktic living species #> 3                                                                                  <NA> #> 4  stratified Heavily Modified Water Bodies and Artificial Water Bodies of the Lowlands #> 5                                                                                  <NA> #> 6                                                                Danube and tributaries #> 7                                           rivers and streams in the Central Highlands #> 8                                                                                  <NA> #> 9                                                                                  <NA> #> 10                                                                                 <NA> #> 11                                                                                 <NA> #> 12                                                                                 <NA> #> 13                                                                                 <NA> #> 14                                                                                 <NA> #> 15                                                                                 <NA> #> 16                                                                                 <NA> #>  #> $taxasearched #>                              raw                   clean group #> 1             Anathece clathrata   Aphanothece clathrata    pp #> 2           Anathece minutissima Aphanothece minutissima    pp #> 3            Anthophysa vegetans                    <NA>    pp #> 4      Apocalathium aciculiferum                    <NA>    pp #> 5 Adlafia minuscula var. muralis                    <NA>    pp #>  #> $type #> [1] \"fetch\""},{"path":"https://anthonybasooma.github.io/fwtraits/articles/data_for_taxa_groups.html","id":"step3--references","dir":"Articles","previous_headings":"","what":"step3. References","title":"Retrieve data for taxomomic groups.","text":"Schmidt-Kloiber, ., & Hering, D. (2015). www.freshwaterecology.info - online tool unifies, standardises codifies 20,000 European freshwater organisms ecological preferences. Ecological Indicators, 53, 271-282. https://doi.org/10.1016/j.ecolind.2015.02.007","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Anthony Basooma. Author, maintainer.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Basooma (2025). fwtraits: Extract Species Ecological Ranges Freshwaterecology.info. R package version 0.0.1, https://anthonybasooma.github.io/fwtraits/, https://github.com/AnthonyBasooma/fwtraits.","code":"@Manual{,   title = {fwtraits: Extract Species Ecological Ranges From Freshwaterecology.info},   author = {Anthony Basooma},   year = {2025},   note = {R package version 0.0.1, https://anthonybasooma.github.io/fwtraits/},   url = {https://github.com/AnthonyBasooma/fwtraits}, }"},{"path":"https://anthonybasooma.github.io/fwtraits/index.html","id":"fwtraits","dir":"","previous_headings":"","what":"Extract Species Ecological Ranges From Freshwaterecology.info","title":"Extract Species Ecological Ranges From Freshwaterecology.info","text":"Aim package fwtraits provides seamless robust access species ecological parameters, traits indicators www.freshwaterecology.info database (Schmidt-Kloiber & Hering 2015). Package installation package currently accessible GitHub Package usage database arranged organism groups including macroinvertebrates, fishes, phytoplankton, macrophytes, phytobenthos especially diatoms (Figure 1). package wrapper around fweapi2 developed maintained University Natural Resources Life Sciences (BOKU), Vienna, Austria. using package, user strongly advised run fw_be4ustart() get steps required access use package accessing species ecological parameters, traits indicators. Main functions fw_setapikey() securing API key user R environment. fw_searchdata() allow get data database. However, mostly internal function since data already parsed enable usability. fw_split() extracts downloaded data tokenised proper usage. fw_fetchdata() main function provides parameters data access. function wrapped around fw_searchdata() fw_split() function allow user easily get manipulate data package usage. utility functions fw_check_names() check spellings species taxonomic names allow user obtain species traits. fw_checktraits()harmonize species traits allow effective user inputs database information. fw_visualize()provides graphical display information obtained database. Funding package created support AquaINFRA project aimed developing data services support marine freshwater scientists stakeholders. Also, DANUBE4All project HR21 Doctoral School BOKU University provided logistical support development package. References Schmidt-Kloiber, ., & Hering, D. (2015). Www.freshwaterecology.info - online tool unifies, standardises codifies 20,000 European freshwater organisms ecological preferences. Ecological Indicators, 53, 271-282. https://doi.org/10.1016/j.ecolind.2015.02.007","code":"# install.packages(\"devtools\")  if (!requireNamespace(\"remotes\", quietly = TRUE)) install.packages(\"remotes\")  remotes::install_github(\"AnthonyBasooma/fwtraits\")"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/check_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for packages to install and reposnd to use — check_packages","title":"Check for packages to install and reposnd to use — check_packages","text":"Check packages install reposnd use","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/check_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for packages to install and reposnd to use — check_packages","text":"","code":"check_packages(pkgs)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/check_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for packages to install and reposnd to use — check_packages","text":"pkgs list packages install","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/check_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for packages to install and reposnd to use — check_packages","text":"error message packages install","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/checktrait.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks the traits spelling compared to user input. — checktrait","title":"Checks the traits spelling compared to user input. — checktrait","text":"Checks traits spelling compared user input.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/checktrait.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks the traits spelling compared to user input. — checktrait","text":"","code":"checktrait(x, std, mindist = 0.3, error = 0.8, grp = NULL, warn = TRUE)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/checktrait.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks the traits spelling compared to user input. — checktrait","text":"x string vector. traits checked spelling errors matching database entries. std lits. list standard traits names database compare user entries. mindist numeric. Set threshold trait similarity user provided found database. lower percentage, higher similarity user provided standard trait names. error numeric. Also percentage improve distance based checked implemented set mindist parameter grp grp. taxa names checked . see fw_searchdata. warn logical show species name warning checks traits cleaning. Default FALSE.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/checktrait.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks the traits spelling compared to user input. — checktrait","text":"list string. list, vector string cleaned traits names based user provided standard database traits downloading.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/clean_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and clean species names to match standard names in the database. — clean_names","title":"Check and clean species names to match standard names in the database. — clean_names","text":"Check clean species names match standard names database.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/clean_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and clean species names to match standard names in the database. — clean_names","text":"","code":"clean_names(   sp,   grouplists,   prechecks = FALSE,   standard_dataset = NULL,   percenterror = 80,   errorness = 30,   full = FALSE,   warn = FALSE,   taxalevel )"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/clean_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and clean species names to match standard names in the database. — clean_names","text":"sp string vector. Species scientific names checked. Although spellings checked, users check species name provided avoid detected database. grouplists list. List data downloaded fw_searchdata function. species considered sp parameter fishes, fishes lists provided otherwise species names rejected. prechecks, standard_dataset logical. TRUE standard prechecks done invertebrates bentho species names search ecological parameters database. standard names provided dataset reduce time identifying standard tyxonomic names macroinvertebrates database. @param taxalevel string Allowed taxonomic levels data can retrieved. Default 'species' data can also downloaded family level, genus, taxa group level. percenterror numeric. number used cutoff infer similarity user provided name found database. higher percentage, higher similarity species name provided user one database. percenterror ranges 0 100 default 80 ensure wrong names selected low similarity percentage cutoff. errorness numeric Similar percenterror, errorness parameter uses distance differences user-provided names taxa group species standard names. lower percentage error, higher similarity species names provided. Default 20 beyond 30, warning showed avoid wrong species replace user provided name, leads extracting wrong traits. full logical TRUE dataframe cleaned uncleaned species required. FALSE species list produced cleaning. Default FALSE. warn alert user species names cleaning errors warnings. taxalevel string Allowed taxonomic levels data can retrieved. Default 'species' data can also downloaded family level, genus, taxa group level.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/clean_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check and clean species names to match standard names in the database. — clean_names","text":"vector string clean species name also found database.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_be4ustart.html","id":null,"dir":"Reference","previous_headings":"","what":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","title":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","text":"Steps follow using Freshwater Information Platform","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_be4ustart.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","text":"","code":"fw_be4ustart()"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_be4ustart.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","text":"list steps follow using FWDB","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_be4ustart.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","text":"Anthony Basooma","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_be4ustart.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Steps to follow in using the Freshwater Information Platform — fw_be4ustart","text":"","code":"#b4us <- fw_be4ustart()"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_dbguide.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","title":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","text":"Standard table taxonomic groups traits explanations.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_dbguide.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","text":"","code":"fw_dbguide(organismgroup = NULL, cachefolder = \"cache\")"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_dbguide.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","text":"organismgroup string vector. Taxa group names aid users filtering standard table species traits explanations. cachefolder string. root path cached data saved user PC. path provided, cached information saved current working directly.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_dbguide.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","text":"dataframe dataset taxonomic groups, traits explanations.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_dbguide.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard table with taxonomic groups and their traits explanations. — fw_dbguide","text":"","code":"if (FALSE) { # \\dontrun{  dbase <- fw_dbguide(cachefolder = 'cache')  } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_fetchdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracting the traits from the downloaded data. — fw_fetchdata","title":"Extracting the traits from the downloaded data. — fw_fetchdata","text":"Extracting traits downloaded data.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_fetchdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracting the traits from the downloaded data. — fw_fetchdata","text":"","code":"fw_fetchdata(   data,   organismgroup,   ecoparams = NULL,   taxalevel = \"species\",   taxonomic_column = NULL,   organismgroup_column = NULL,   apikey = NULL,   seed = 1134,   secure = TRUE,   percenterror = 80,   errorness = 20,   warn = FALSE,   inform = FALSE,   cachefolder = \"cache\",   details = FALSE )"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_fetchdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracting the traits from the downloaded data. — fw_fetchdata","text":"data vector. list vector species names ecological references needs extracted database. organismgroup string. organism group download platform. allowed group include \"fi\", \"mi\", \"pp\", \"pb\", \"di\",\"mp\" fishes, macroinvertebrates, phytoplankton, phytobenthos, diatoms, macrophytes, respectively. Multiple groups allowed 'pp', 'di'. pp: Pytoplankton. mp: Macrophtytes mi: Macroinvertebrates fi: Fishes di: Diatoms pb: Phytobenthos without diatoms ecoparams vector. Selected traits downloaded particular organism group. Check fw_dbguide allowed traits database. taxalevel string Allowed taxonomic levels data can retrieved. Default 'species' data can also downloaded family level, genus, taxa group level. taxonomic_column string. data dataframe, species column required provided parameter. column complete species name genus species provided separately. organismgroup_column string data dataframe, one taxonomic group exists data, organismgroup_column required iterate taxonomic groups separately. apikey string. API key automatically loaded using loadapikey() internal function. seed integer. integer help track caching access token generated data collation. user wants get new token, seed changed. secure logical. TRUE, user prompted set API key .Renviron file running fw_setapikey function. User must strictly type API_KEY = 'api key', save, close file restart R session RStudio API_KEY environment captured. FALSE, key entered directly API_KEY directly fw_token() function. method insecure, since key can obtained codes users. percenterror numeric. number used cutoff infer similarity user provided name found database. higher percentage, higher similarity species name provided user one database. percenterror ranges 0 100 default 80 ensure wrong names selected low similarity percentage cutoff. errorness numeric Similar percenterror, errorness parameter uses distance differences user-provided names taxa group species standard names. lower percentage error, higher similarity species names provided. Default 20 beyond 30, warning showed avoid wrong species replace user provided name, leads extracting wrong traits. warn logical show species name warning checks traits cleaning. Default FALSE. inform logical. indicate token successfully generated. Default TRUE. cachefolder string. root path cached data saved user PC. path provided, cached information saved current working directly. details logical. print output summary including parameters used, successful unsuccessful data retrieval.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_fetchdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracting the traits from the downloaded data. — fw_fetchdata","text":"dataframe dataframe species traits orders.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_fetchdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracting the traits from the downloaded data. — fw_fetchdata","text":"","code":"if (FALSE) { # \\dontrun{  dfextract <- fw_fetchdata(data = \"Abramis brama\", organismgroup = 'fi', inform = TRUE,                             ecoparams = 'migration', cachefolder = 'cache' )  } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_keyload.html","id":null,"dir":"Reference","previous_headings":"","what":"For loading the API key from the environment. — fw_keyload","title":"For loading the API key from the environment. — fw_keyload","text":"loading API key environment.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_keyload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"For loading the API key from the environment. — fw_keyload","text":"","code":"fw_keyload()"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_paramlist.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to retrieve all the traits in the database. — fw_paramlist","title":"Function to retrieve all the traits in the database. — fw_paramlist","text":"Function retrieve traits database.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_paramlist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to retrieve all the traits in the database. — fw_paramlist","text":"","code":"fw_paramlist(cachefolder = NULL)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_paramlist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to retrieve all the traits in the database. — fw_paramlist","text":"list List traits taxa groups orders database.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_paramlist.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Function to retrieve all the traits in the database. — fw_paramlist","text":"Anthony Basooma","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_register.html","id":null,"dir":"Reference","previous_headings":"","what":"Open the registration page — fw_register","title":"Open the registration page — fw_register","text":"Open registration page","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_register.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open the registration page — fw_register","text":"","code":"fw_register()"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_register.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open the registration page — fw_register","text":"registration page","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":null,"dir":"Reference","previous_headings":"","what":"To download data from the Freshwaterecology.info database. — fw_searchdata","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"function provides seamless access download species ecological parameters, traits, indicators Freshwaterecology.info database. function allows multiple inclusion organism groups, include macroinvertebrates, fishes, phytoplankton, phytobenthos, macrophytes, diatoms.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"","code":"fw_searchdata(   organismgroup,   taxa_searched = NULL,   ecoparams = NULL,   apikey = NULL,   warn = TRUE,   seed = 1135,   secure = TRUE,   inform = FALSE,   taxalevel = NULL,   cachefolder = \"cache\" )"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"organismgroup string. organism group download platform. allowed group include \"fi\", \"mi\", \"pp\", \"pb\", \"di\",\"mp\" fishes, macroinvertebrates, phytoplankton, phytobenthos, diatoms, macrophytes, respectively. Multiple groups allowed 'pp', 'di'. pp: Pytoplankton. mp: Macrophtytes mi: Macroinvertebrates fi: Fishes di: Diatoms pb: Phytobenthos without diatoms taxa_searched string internal placeholder accommodate standard taxonomic names invertebrates phytobenthos database. ecoparams vector. Selected traits downloaded particular organism group. Check fw_dbguide allowed traits database. apikey string. API key automatically loaded using loadapikey() internal function. warn logical show species name warning checks traits cleaning. Default FALSE. seed integer. integer help track caching access token generated data collation. user wants get new token, seed changed. secure logical. TRUE, user prompted set API key .Renviron file running fw_setapikey function. User must strictly type API_KEY = 'api key', save, close file restart R session RStudio API_KEY environment captured. FALSE, key entered directly API_KEY directly fw_token() function. method insecure, since key can obtained codes users. inform logical. indicate token successfully generated. Default TRUE. taxalevel string Allowed taxonomic levels data can retrieved. Default 'species' data can also downloaded family level, genus, taxa group level. cachefolder string. root path cached data saved user PC. path provided, cached information saved current working directly.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"List download species traits","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"macroinvertebrates, since alot data take lot time download yet slowing process, taxa_searched parameter provided search particular traits, family orders taxa group species falls. Also, phytobenthos requires provide taxa_searched enable search particular taxa group. organism group, parameter provided used data search.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_searchdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"To download data from the Freshwaterecology.info database. — fw_searchdata","text":"","code":"if (FALSE) { # \\dontrun{ dfsearch <- fw_searchdata(organismgroup = 'fi', ecoparams = 'migration', cachefolder = 'cache') } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_setapikey.html","id":null,"dir":"Reference","previous_headings":"","what":"Function and instructions creating the API_KEY variable in the User environment. — fw_setapikey","title":"Function and instructions creating the API_KEY variable in the User environment. — fw_setapikey","text":"Function instructions creating API_KEY variable User environment.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_setapikey.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function and instructions creating the API_KEY variable in the User environment. — fw_setapikey","text":"","code":"fw_setapikey()"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_token.html","id":null,"dir":"Reference","previous_headings":"","what":"Access and loading the token key — fw_token","title":"Access and loading the token key — fw_token","text":"function updates authentication token automatically generated every six hours servers. function uses API key, one time key provided registration provided database managers already registered users. Since authentication token expires, seed parameter included allow caching across user sessions. Therefore, data downloaded particular seed stored memory can retrieved user PC servers hence tremendously optimizing speed data access. token generated two different ways depending whether codes shared others personal use. personal use, API key directly pasted pop fw_token executed. However, latter circumstance, API key advisable stored R user environment encrypted code execution. Check vignettes handling API key fwtraits GitHub.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_token.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Access and loading the token key — fw_token","text":"","code":"fw_token(   apikey = NULL,   seed = NULL,   cachefolder = NULL,   secure = TRUE,   inform = FALSE )"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_token.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Access and loading the token key — fw_token","text":"apikey string. API key automatically loaded using loadapikey() internal function. seed integer. integer help track caching access token generated data collation. user wants get new token, seed changed. cachefolder string. root path cached data saved user PC. path provided, cached information saved current working directly. secure logical. TRUE, user prompted set API key .Renviron file running fw_setapikey function. User must strictly type API_KEY = 'api key', save, close file restart R session RStudio API_KEY environment captured. FALSE, key entered directly API_KEY directly fw_token() function. method insecure, since key can obtained codes users. inform logical. indicate token successfully generated. Default TRUE.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_token.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Access and loading the token key — fw_token","text":"string token authentication token key","code":""},{"path":[]},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_token.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Access and loading the token key — fw_token","text":"","code":"if (FALSE) { # \\dontrun{  #1.Use the API key in shared R examples  } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_visualize.html","id":null,"dir":"Reference","previous_headings":"","what":"ggplot2 visualization. — fw_visualize","title":"ggplot2 visualization. — fw_visualize","text":"ggplot2 visualization.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_visualize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ggplot2 visualization. — fw_visualize","text":"","code":"fw_visualize(   output,   scales = \"free\",   ncol = 2,   params = NULL,   organism_group = NULL,   color = \"purple\",   na.rm = TRUE )"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_visualize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ggplot2 visualization. — fw_visualize","text":"output fetchdata output accepted. scales indicate scales free, free_x, free_y. ncol Number columns display data facet_wrap. params species ecological parameters selected one. organism_group Particular organism group filter allow visualization. color string Change color bar graphs plotted. na.rm logical remove NA category names species traits.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/fw_visualize.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ggplot2 visualization. — fw_visualize","text":"ggplot2 display","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"tibble","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"","code":"data(invertbackbone)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"tibble 23333333333 rows 2 columns.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"fgdhdhdjd nfjdkedkdld","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"Schmidt-Kloiber, ., & Hering, D. (2015). Www.freshwaterecology.info - online tool unifies, standardises codifies 20,000 European freshwater organisms ecological preferences. Ecological Indicators, 53, 271-282. https://doi.org/10.1016/j.ecolind.2015.02.007.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/invertbackbone.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonomic data for species in the freshwaterecology.info database — invertbackbone","text":"","code":"if (FALSE) { # \\dontrun{  data(\"invertbackbone\") invertbackbone } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":null,"dir":"Reference","previous_headings":"","what":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"tibble","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"","code":"data(pbenthodata)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"tibble 1857 rows 2 columns.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"fhfhdld fnfmf...","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"Schmidt-Kloiber, ., & Hering, D. (2015). Www.freshwaterecology.info - online tool unifies, standardises codifies 20,000 European freshwater organisms ecological preferences. Ecological Indicators, 53, 271-282. https://doi.org/10.1016/j.ecolind.2015.02.007.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/pbenthodata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Taxonommic data for the phytobentho species in freshwaterecology.info database. — pbenthodata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"pbenthodata\")  pbenthodata } # }"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":null,"dir":"Reference","previous_headings":"","what":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"tibble","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"","code":"data(speciesdata)"},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"tibble 99 rows 23 columns.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains (Logez et al. 2012). extract made usage package information write ihg@boku.ac.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"Logez M, Belliard J, Melcher , Kremser H, Pletterbauer F, Schmutz S, Gorges G, Delaigue O, Pont D. 2012. Deliverable D5.1-3: BQEs sensitivity global/climate change European rivers: implications reference conditions pressure-impact-recovery chains.","code":""},{"path":"https://anthonybasooma.github.io/fwtraits/reference/speciesdata.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Efiplus data used to develop ecological sensitivity parameters for riverine species in European streams and rivers. — speciesdata","text":"","code":"if (FALSE) { # \\dontrun{  data(\"speciesdata\") speciesdata } # }"}]
